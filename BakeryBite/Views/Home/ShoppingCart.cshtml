@{
    ViewData["Title"] = "Корзина";
    Layout = "_LayoutSecond";
}
@model List<CartItem>
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/ShoppingCart.css" />
<h1>Корзина покупок</h1>

<div class="grid-container">
    <div class="grid-item">
        @if (Model != null && Model.Count > 0)
        {
            @foreach (var item in Model)
            {
                <div class="base">
                    <div class="image">
                        <img class="product-img" src="data:image/png;base64,@item.Product.Avatar" alt="">
                    </div>
                    <div class="text">
                        <p class="product-name">@item.Product.Name</p>
                        <p class="product-quantity">
                            Количество: <input type="number" id="quantity-@item.Product.Id" value="@item.Quantity" min="1" data-initial-quantity="@item.Quantity" onchange="changeQuantityManual(@item.Product.Id, this.value)">
                        </p>

                    </div>
                    <p class="product-price">Цена: @item.Product.Cost руб.</p>
                    <div class="quantity-buttons">
                        <button type="button" class="add-button" onclick="changeQuantity(@item.Product.Id, 1)">+</button>
                        <button type="button" class="remove-button" onclick="changeQuantity(@item.Product.Id, -1)">-</button>
                    </div>
                </div>
            }
        }
        else
        {
            <p>Ваша корзина пуста.</p>
        }
    </div>

    @if (Model != null && Model.Count > 0)
    {
        <div class="cart-summary">
            <h3>Итоговая информация</h3>
            <p>Количество товаров: <span id="total-quantity">@Model.Sum(item => item.Quantity)</span></p>
            <p>Итоговая стоимость: <span id="total-cost">@Model.Sum(item => item.Quantity * item.Product.Cost)</span> руб.</p>
            <form method="post" asp-controller="Home" asp-action="OrderConfirmation">
                <button type="submit" class="checkout-button">Оформить заказ</button>
            </form>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function changeQuantity(productId, change) {
        var quantityElement = $('#quantity-' + productId);
        var currentQuantity = parseInt(quantityElement.val());
        var newValue = currentQuantity + change;

        if (newValue <= 0 && currentQuantity === 1) {
            if (!confirm('Вы уверены, что хотите удалить этот товар из корзины?')) {
                return;
            } else {
                removeItemFromCart(productId);
                return;
            }
        }

        quantityElement.val(newValue);
        sendChangeQuantityRequest(productId, change);
    }


    function changeQuantityManual(productId, value) {
        var quantityElement = $('#quantity-' + productId);
        var initialQuantity = parseInt(quantityElement.attr('data-initial-quantity')) || 0; 
        var newValue = parseInt(value);

        if (isNaN(newValue) || newValue < 0) {
            alert('Количество должно быть числом больше или равным 0.');
            quantityElement.val(initialQuantity); 
            return;
        }

        var change = newValue - initialQuantity;

        if (newValue === 0 || newValue <= 0) {
            if (!confirm('Вы уверены, что хотите удалить этот товар из корзины?')) {
                quantityElement.val(initialQuantity); 
                return;
            } else {
                removeItemFromCart(productId);
                return;
            }
        }

        quantityElement.attr('data-initial-quantity', newValue);

        sendChangeQuantityRequest(productId, change);
    }


    function sendChangeQuantityRequest(productId, quantity) {
        $.ajax({
            url: '/Home/ChangeCartItemQuantity',
            type: 'POST',
            data: { productId: productId, change: quantity },
            success: function (data) {
                $('#total-quantity').text(data.totalQuantity);
                $('#total-cost').text(data.totalCost);
                location.reload();
            },
            error: function () {
                alert('Ошибка при изменении количества товара в корзине.');
            }
        });
    }

    function removeItemFromCart(productId) {
        $.ajax({
            url: '/Home/ChangeCartItemQuantity',
            type: 'POST',
            data: { productId: productId, change: -999 },
            success: function (data) {
                $('#total-quantity').text(data.totalQuantity);
                $('#total-cost').text(data.totalCost);
                location.reload();
            },
            error: function () {
                alert('Ошибка при удалении товара из корзины.');
            }
        });
    }

</script>
